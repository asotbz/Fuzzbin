@using Fuzzbin.Core.Entities
@using System.Net.Http.Json
@using MudBlazor
@inject HttpClient HttpClient
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="@_isValid">
            <MudTextField @bind-Value="_name"
                          Label="Genre Name"
                          Required="true"
                          RequiredError="Genre name is required"
                          Variant="Variant.Outlined"
                          Immediate="true" />
            <MudTextField @bind-Value="_description"
                          Label="Description"
                          Lines="3"
                          Variant="Variant.Outlined"
                          Class="mt-3" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary"
                   Variant="Variant.Filled"
                   OnClick="Submit"
                   Disabled="@(!_isValid || _submitting)">
            @if (_submitting)
            {
                <MudProgressCircular Size="Size.Small" Indeterminate="true" />
            }
            else
            {
                <text>Create</text>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public string Title { get; set; } = "Create Genre";

    private MudForm _form = null!;
    private bool _isValid;
    private bool _submitting;
    private string _name = string.Empty;
    private string? _description;

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Submit()
    {
        if (!_isValid) return;

        _submitting = true;
        try
        {
            var request = new { Name = _name, Description = _description };
            var response = await HttpClient.PostAsJsonAsync("/api/genres", request);

            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add($"Genre '{_name}' created successfully", Severity.Success);
                MudDialog.Close(DialogResult.Ok(true));
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.Conflict)
            {
                var error = await response.Content.ReadFromJsonAsync<ErrorResponse>();
                Snackbar.Add(error?.Message ?? "Genre already exists", Severity.Error);
            }
            else
            {
                Snackbar.Add($"Failed to create genre: {response.ReasonPhrase}", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error creating genre: {ex.Message}", Severity.Error);
        }
        finally
        {
            _submitting = false;
        }
    }

    private record ErrorResponse(string Message);
}